# Generated by Django 3.1.4 on 2021-01-23 14:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='名称')),
                ('description', models.CharField(blank=True, max_length=100, null=True, verbose_name='描述')),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('base_status', models.BooleanField(default=True)),
                ('action_id', models.IntegerField(unique=True, verbose_name='权限序号')),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': 'Action权限',
                'verbose_name_plural': 'Action权限',
                'db_table': 'Action',
            },
        ),
        migrations.CreateModel(
            name='App',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='名称')),
                ('description', models.CharField(blank=True, max_length=100, null=True, verbose_name='描述')),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('base_status', models.BooleanField(default=True)),
                ('cn_name', models.CharField(max_length=255, verbose_name='中文名')),
                ('app_id', models.IntegerField(default=0, verbose_name='应用编号')),
                ('git_app_id', models.IntegerField(default=0, verbose_name='Git应用ID')),
                ('git_trigger_token', models.CharField(blank=True, max_length=64, null=True, verbose_name='git trigger token')),
                ('build_script', models.CharField(default='build.sh', max_length=255, verbose_name='编译脚本名')),
                ('deploy_script', models.CharField(default='bifang.sh', max_length=255, verbose_name='部署脚本名')),
                ('zip_package_name', models.CharField(default='demo.zio', max_length=255, verbose_name='应用压缩包')),
                ('service_port', models.IntegerField(default=0, verbose_name='服务端口')),
                ('service_username', models.CharField(blank=True, max_length=24, null=True, verbose_name='执行用户名')),
                ('service_group', models.CharField(blank=True, max_length=24, null=True, verbose_name='执行用户组')),
                ('op_log_no', models.IntegerField(default=0, verbose_name='启停日志次数')),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': 'App应用',
                'verbose_name_plural': 'App应用',
                'db_table': 'App',
            },
        ),
        migrations.CreateModel(
            name='Env',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='名称')),
                ('description', models.CharField(blank=True, max_length=100, null=True, verbose_name='描述')),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('base_status', models.BooleanField(default=True)),
                ('env_id', models.IntegerField(default=0, verbose_name='环境Id')),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': 'Env环境',
                'verbose_name_plural': 'Env环境',
                'db_table': 'Env',
            },
        ),
        migrations.CreateModel(
            name='GitTb',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='名称')),
                ('description', models.CharField(blank=True, max_length=100, null=True, verbose_name='描述')),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('base_status', models.BooleanField(default=True)),
                ('git_url', models.URLField(verbose_name='Git API地址')),
                ('git_token', models.CharField(default='no_token', max_length=64, verbose_name='Git API认证token')),
                ('git_ver', models.CharField(default='12.10', max_length=16, verbose_name='Git版本')),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': 'GitTb代码仓库',
                'verbose_name_plural': 'GitTb代码仓库',
                'db_table': 'GitTb',
            },
        ),
        migrations.CreateModel(
            name='Release',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='名称')),
                ('description', models.CharField(blank=True, max_length=100, null=True, verbose_name='描述')),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('base_status', models.BooleanField(default=True)),
                ('deploy_no', models.IntegerField(blank=True, default=0, null=True, verbose_name='部署次数')),
                ('git_branch', models.CharField(blank=True, max_length=255, null=True)),
                ('pipeline_id', models.IntegerField(default=0)),
                ('pipeline_url', models.URLField(default='http://www.demo.com')),
                ('deploy_script_url', models.URLField(blank=True, default=None, null=True, verbose_name='部署脚本路径')),
                ('zip_package_url', models.URLField(blank=True, default=None, null=True, verbose_name='压缩制品库路径')),
                ('app', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ra_release', to='cmdb.app', verbose_name='应用')),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': 'Release发布单',
                'verbose_name_plural': 'Release发布单',
                'db_table': 'Release',
            },
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='名称')),
                ('description', models.CharField(blank=True, max_length=100, null=True, verbose_name='描述')),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('base_status', models.BooleanField(default=True)),
                ('ip', models.GenericIPAddressField(verbose_name='服务器Ip')),
                ('port', models.IntegerField(verbose_name='服务器端口')),
                ('system_type', models.CharField(choices=[('WINDOWS', 'WINDOWS'), ('LINUX', 'LINUX')], default='LINUX', max_length=16, verbose_name='操作系统')),
                ('app', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ra_server', to='cmdb.app', verbose_name='应用服务')),
                ('back_release', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ra_server_back', to='cmdb.release', verbose_name='备份发布单')),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
                ('main_release', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ra_server_main', to='cmdb.release', verbose_name='主发布单')),
            ],
            options={
                'verbose_name': 'Server服务器',
                'verbose_name_plural': 'Server服务器',
                'db_table': 'Server',
                'unique_together': {('ip', 'port')},
            },
        ),
        migrations.CreateModel(
            name='ServerHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='名称')),
                ('description', models.CharField(blank=True, max_length=100, null=True, verbose_name='描述')),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('base_status', models.BooleanField(default=True)),
                ('op_type', models.CharField(blank=True, choices=[('deploy', '部署'), ('maintenance', '启停维护')], max_length=255, null=True, verbose_name='操作类型')),
                ('action_type', models.CharField(blank=True, choices=[('fetch', '获取软件'), ('stop', '停止'), ('stop_status', '停止状态检测'), ('deploy', '部署'), ('rollback', '回滚'), ('start', '启动'), ('start_status', '启动状态检测'), ('health_check', '服务健康检测')], max_length=255, null=True, verbose_name='服务器操作类型')),
                ('log', models.TextField(verbose_name='日志内容')),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
                ('env', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ra_server_history', to='cmdb.env', verbose_name='环境')),
                ('release', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ra_server_history', to='cmdb.release', verbose_name='发布单')),
                ('server', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ra_server_history', to='cmdb.server', verbose_name='服务器')),
            ],
            options={
                'verbose_name': 'ServerHistory服务器历史',
                'verbose_name_plural': 'ServerHistory服务器历史',
                'db_table': 'ServerHistory',
            },
        ),
        migrations.CreateModel(
            name='SaltTb',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='名称')),
                ('description', models.CharField(blank=True, max_length=100, null=True, verbose_name='描述')),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('base_status', models.BooleanField(default=True)),
                ('salt_url', models.URLField(verbose_name='Salt API地址')),
                ('salt_user', models.CharField(max_length=64, verbose_name='Salt API用户')),
                ('salt_pwd', models.CharField(max_length=64, verbose_name='Salt API密码')),
                ('eauth', models.CharField(default='pam', max_length=64, verbose_name='Salt API用户认证')),
                ('trust_host', models.BooleanField(default=True, verbose_name='Salt API安全认证')),
                ('salt_ver', models.CharField(default='2019.3010', max_length=12, verbose_name='Salt版本')),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': 'SaltTb远程执行工具',
                'verbose_name_plural': 'SaltTb远程执行工具',
                'db_table': 'SaltTb',
            },
        ),
        migrations.CreateModel(
            name='ReleaseStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='名称')),
                ('description', models.CharField(blank=True, max_length=100, null=True, verbose_name='描述')),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('base_status', models.BooleanField(default=True)),
                ('status_value', models.CharField(blank=True, max_length=1024, verbose_name='状态值')),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': 'ReleaseStatus发布单状态',
                'verbose_name_plural': 'ReleaseStatus发布单状态',
                'db_table': 'ReleaseStatus',
            },
        ),
        migrations.CreateModel(
            name='ReleaseHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='名称')),
                ('description', models.CharField(blank=True, max_length=100, null=True, verbose_name='描述')),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('base_status', models.BooleanField(default=True)),
                ('deploy_type', models.CharField(blank=True, choices=[('deploy', '部署'), ('rollback', '回滚')], max_length=255, null=True, verbose_name='部署类型')),
                ('log', models.TextField(verbose_name='日志内容')),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
                ('deploy_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ra_release_history', to='cmdb.releasestatus', verbose_name='发布单状态')),
                ('env', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ra_release_history', to='cmdb.env', verbose_name='环境')),
                ('release', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ra_release_history', to='cmdb.release', verbose_name='发布单')),
            ],
            options={
                'verbose_name': 'ReleaseHistory发布单历史',
                'verbose_name_plural': 'ReleaseHistory发布单历史',
                'db_table': 'ReleaseHistory',
            },
        ),
        migrations.AddField(
            model_name='release',
            name='deploy_status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ra_release', to='cmdb.releasestatus', verbose_name='发布单状态'),
        ),
        migrations.AddField(
            model_name='release',
            name='env',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ra_release', to='cmdb.env', verbose_name='环境'),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='名称')),
                ('description', models.CharField(blank=True, max_length=100, null=True, verbose_name='描述')),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('base_status', models.BooleanField(default=True)),
                ('cn_name', models.CharField(max_length=255, verbose_name='中文名')),
                ('project_id', models.IntegerField(default=0, verbose_name='项目编号')),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': 'Project项目',
                'verbose_name_plural': 'Project项目',
                'db_table': 'Project',
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='名称')),
                ('description', models.CharField(blank=True, max_length=100, null=True, verbose_name='描述')),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('base_status', models.BooleanField(default=True)),
                ('action', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ra_permission', to='cmdb.action', verbose_name='操作权限')),
                ('app', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ra_permission', to='cmdb.app', verbose_name='App应用')),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
                ('pm_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ra_permission', to=settings.AUTH_USER_MODEL, verbose_name='权限用户')),
            ],
            options={
                'verbose_name': 'Permission应用权限',
                'verbose_name_plural': 'Permission应用权限',
                'db_table': 'Permission',
            },
        ),
        migrations.CreateModel(
            name='HistoricalServerHistory',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='名称')),
                ('description', models.CharField(blank=True, max_length=100, null=True, verbose_name='描述')),
                ('update_date', models.DateTimeField(blank=True, editable=False)),
                ('create_date', models.DateTimeField(blank=True, editable=False)),
                ('base_status', models.BooleanField(default=True)),
                ('op_type', models.CharField(blank=True, choices=[('deploy', '部署'), ('maintenance', '启停维护')], max_length=255, null=True, verbose_name='操作类型')),
                ('action_type', models.CharField(blank=True, choices=[('fetch', '获取软件'), ('stop', '停止'), ('stop_status', '停止状态检测'), ('deploy', '部署'), ('rollback', '回滚'), ('start', '启动'), ('start_status', '启动状态检测'), ('health_check', '服务健康检测')], max_length=255, null=True, verbose_name='服务器操作类型')),
                ('log', models.TextField(verbose_name='日志内容')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('create_user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
                ('env', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='cmdb.env', verbose_name='环境')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('release', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='cmdb.release', verbose_name='发布单')),
                ('server', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='cmdb.server', verbose_name='服务器')),
            ],
            options={
                'verbose_name': 'historical ServerHistory服务器历史',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalServer',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='名称')),
                ('description', models.CharField(blank=True, max_length=100, null=True, verbose_name='描述')),
                ('update_date', models.DateTimeField(blank=True, editable=False)),
                ('create_date', models.DateTimeField(blank=True, editable=False)),
                ('base_status', models.BooleanField(default=True)),
                ('ip', models.GenericIPAddressField(verbose_name='服务器Ip')),
                ('port', models.IntegerField(verbose_name='服务器端口')),
                ('system_type', models.CharField(choices=[('WINDOWS', 'WINDOWS'), ('LINUX', 'LINUX')], default='LINUX', max_length=16, verbose_name='操作系统')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('app', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='cmdb.app', verbose_name='应用服务')),
                ('back_release', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='cmdb.release', verbose_name='备份发布单')),
                ('create_user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('main_release', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='cmdb.release', verbose_name='主发布单')),
            ],
            options={
                'verbose_name': 'historical Server服务器',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSaltTb',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='名称')),
                ('description', models.CharField(blank=True, max_length=100, null=True, verbose_name='描述')),
                ('update_date', models.DateTimeField(blank=True, editable=False)),
                ('create_date', models.DateTimeField(blank=True, editable=False)),
                ('base_status', models.BooleanField(default=True)),
                ('salt_url', models.URLField(verbose_name='Salt API地址')),
                ('salt_user', models.CharField(max_length=64, verbose_name='Salt API用户')),
                ('salt_pwd', models.CharField(max_length=64, verbose_name='Salt API密码')),
                ('eauth', models.CharField(default='pam', max_length=64, verbose_name='Salt API用户认证')),
                ('trust_host', models.BooleanField(default=True, verbose_name='Salt API安全认证')),
                ('salt_ver', models.CharField(default='2019.3010', max_length=12, verbose_name='Salt版本')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('create_user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical SaltTb远程执行工具',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalReleaseStatus',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='名称')),
                ('description', models.CharField(blank=True, max_length=100, null=True, verbose_name='描述')),
                ('update_date', models.DateTimeField(blank=True, editable=False)),
                ('create_date', models.DateTimeField(blank=True, editable=False)),
                ('base_status', models.BooleanField(default=True)),
                ('status_value', models.CharField(blank=True, max_length=1024, verbose_name='状态值')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('create_user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical ReleaseStatus发布单状态',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalReleaseHistory',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='名称')),
                ('description', models.CharField(blank=True, max_length=100, null=True, verbose_name='描述')),
                ('update_date', models.DateTimeField(blank=True, editable=False)),
                ('create_date', models.DateTimeField(blank=True, editable=False)),
                ('base_status', models.BooleanField(default=True)),
                ('deploy_type', models.CharField(blank=True, choices=[('deploy', '部署'), ('rollback', '回滚')], max_length=255, null=True, verbose_name='部署类型')),
                ('log', models.TextField(verbose_name='日志内容')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('create_user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
                ('deploy_status', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='cmdb.releasestatus', verbose_name='发布单状态')),
                ('env', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='cmdb.env', verbose_name='环境')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('release', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='cmdb.release', verbose_name='发布单')),
            ],
            options={
                'verbose_name': 'historical ReleaseHistory发布单历史',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRelease',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='名称')),
                ('description', models.CharField(blank=True, max_length=100, null=True, verbose_name='描述')),
                ('update_date', models.DateTimeField(blank=True, editable=False)),
                ('create_date', models.DateTimeField(blank=True, editable=False)),
                ('base_status', models.BooleanField(default=True)),
                ('deploy_no', models.IntegerField(blank=True, default=0, null=True, verbose_name='部署次数')),
                ('git_branch', models.CharField(blank=True, max_length=255, null=True)),
                ('pipeline_id', models.IntegerField(default=0)),
                ('pipeline_url', models.URLField(default='http://www.demo.com')),
                ('deploy_script_url', models.URLField(blank=True, default=None, null=True, verbose_name='部署脚本路径')),
                ('zip_package_url', models.URLField(blank=True, default=None, null=True, verbose_name='压缩制品库路径')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('app', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='cmdb.app', verbose_name='应用')),
                ('create_user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
                ('deploy_status', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='cmdb.releasestatus', verbose_name='发布单状态')),
                ('env', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='cmdb.env', verbose_name='环境')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Release发布单',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProject',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='名称')),
                ('description', models.CharField(blank=True, max_length=100, null=True, verbose_name='描述')),
                ('update_date', models.DateTimeField(blank=True, editable=False)),
                ('create_date', models.DateTimeField(blank=True, editable=False)),
                ('base_status', models.BooleanField(default=True)),
                ('cn_name', models.CharField(max_length=255, verbose_name='中文名')),
                ('project_id', models.IntegerField(default=0, verbose_name='项目编号')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('create_user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Project项目',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPermission',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='名称')),
                ('description', models.CharField(blank=True, max_length=100, null=True, verbose_name='描述')),
                ('update_date', models.DateTimeField(blank=True, editable=False)),
                ('create_date', models.DateTimeField(blank=True, editable=False)),
                ('base_status', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('action', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='cmdb.action', verbose_name='操作权限')),
                ('app', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='cmdb.app', verbose_name='App应用')),
                ('create_user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('pm_user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='权限用户')),
            ],
            options={
                'verbose_name': 'historical Permission应用权限',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalGitTb',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='名称')),
                ('description', models.CharField(blank=True, max_length=100, null=True, verbose_name='描述')),
                ('update_date', models.DateTimeField(blank=True, editable=False)),
                ('create_date', models.DateTimeField(blank=True, editable=False)),
                ('base_status', models.BooleanField(default=True)),
                ('git_url', models.URLField(verbose_name='Git API地址')),
                ('git_token', models.CharField(default='no_token', max_length=64, verbose_name='Git API认证token')),
                ('git_ver', models.CharField(default='12.10', max_length=16, verbose_name='Git版本')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('create_user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical GitTb代码仓库',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEnv',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='名称')),
                ('description', models.CharField(blank=True, max_length=100, null=True, verbose_name='描述')),
                ('update_date', models.DateTimeField(blank=True, editable=False)),
                ('create_date', models.DateTimeField(blank=True, editable=False)),
                ('base_status', models.BooleanField(default=True)),
                ('env_id', models.IntegerField(default=0, verbose_name='环境Id')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('create_user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('salt', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='cmdb.salttb', verbose_name='Salt地址')),
            ],
            options={
                'verbose_name': 'historical Env环境',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalApp',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='名称')),
                ('description', models.CharField(blank=True, max_length=100, null=True, verbose_name='描述')),
                ('update_date', models.DateTimeField(blank=True, editable=False)),
                ('create_date', models.DateTimeField(blank=True, editable=False)),
                ('base_status', models.BooleanField(default=True)),
                ('cn_name', models.CharField(max_length=255, verbose_name='中文名')),
                ('app_id', models.IntegerField(default=0, verbose_name='应用编号')),
                ('git_app_id', models.IntegerField(default=0, verbose_name='Git应用ID')),
                ('git_trigger_token', models.CharField(blank=True, max_length=64, null=True, verbose_name='git trigger token')),
                ('build_script', models.CharField(default='build.sh', max_length=255, verbose_name='编译脚本名')),
                ('deploy_script', models.CharField(default='bifang.sh', max_length=255, verbose_name='部署脚本名')),
                ('zip_package_name', models.CharField(default='demo.zio', max_length=255, verbose_name='应用压缩包')),
                ('service_port', models.IntegerField(default=0, verbose_name='服务端口')),
                ('service_username', models.CharField(blank=True, max_length=24, null=True, verbose_name='执行用户名')),
                ('service_group', models.CharField(blank=True, max_length=24, null=True, verbose_name='执行用户组')),
                ('op_log_no', models.IntegerField(default=0, verbose_name='启停日志次数')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('create_user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
                ('git', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='cmdb.gittb', verbose_name='Git实例')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='cmdb.project', verbose_name='项目')),
            ],
            options={
                'verbose_name': 'historical App应用',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAction',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='名称')),
                ('description', models.CharField(blank=True, max_length=100, null=True, verbose_name='描述')),
                ('update_date', models.DateTimeField(blank=True, editable=False)),
                ('create_date', models.DateTimeField(blank=True, editable=False)),
                ('base_status', models.BooleanField(default=True)),
                ('action_id', models.IntegerField(db_index=True, verbose_name='权限序号')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('create_user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Action权限',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='env',
            name='salt',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ra_env', to='cmdb.salttb', verbose_name='Salt地址'),
        ),
        migrations.AddField(
            model_name='app',
            name='git',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ra_app', to='cmdb.gittb', verbose_name='Git实例'),
        ),
        migrations.AddField(
            model_name='app',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ra_project', to='cmdb.project', verbose_name='项目'),
        ),
    ]
